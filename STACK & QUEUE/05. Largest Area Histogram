import java.io.*;
import java.util.*;

public class Main{
  

public static void main(String[] args) throws Exception {
    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

    int n = Integer.parseInt(br.readLine());
    int[] a = new int[n];
    for(int i = 0; i < n; i++){
       a[i] = Integer.parseInt(br.readLine());
    }

    // code
    int Area = LAH(a);
    System.out.println(Area);
    
 }
 public static int LAH(int ht[]){ // ht = given input height  array
    int nsr[] = nextSmallerRight(ht);
    int nsl[] = nextSmallerLeft(ht);
    
    int max_area = 0;
    for(int i=0 ; i< nsr.length ; i++){
        int width = (nsr[i]-nsl[i])-1 ;
        int area = width * ht[i];
        
        if(area > max_area){
            max_area = area;
        }
    }
    return max_area;
    
 }
 
 public static int[] nextSmallerRight(int []ht){
     Stack<Integer> st = new Stack<>();
     int nsr[] = new int[ht.length];
     nsr[ht.length-1] = ht.length;
     st.push(ht.length-1);
     
     for(int i=ht.length-2 ; i>=0 ; i-- ){
         while(st.size() > 0 && ht[st.peek()] >= ht[i]){
             st.pop();
         }
         if(st.size()== 0){
             nsr[i] = ht.length;
         }
         else{
             nsr[i] = st.peek();
         }
         st.push(i);
     }
     return nsr;
 }
  public static int[] nextSmallerLeft(int []ht){
      
       Stack<Integer> st = new Stack<>();
     int nsl[] = new int[ht.length];
     nsl[0] = -1;
     st.push(0);
     
     for(int i = 1 ; i< ht.length ; i++ ){
         while(st.size() > 0 && ht[st.peek()] >= ht[i]){
             st.pop();
         }
         if(st.size()== 0){
             nsl[i] = -1;
         }
         else{
             nsl[i] = st.peek();
         }
         st.push(i);
     }
     return nsl;
      
    }
}
