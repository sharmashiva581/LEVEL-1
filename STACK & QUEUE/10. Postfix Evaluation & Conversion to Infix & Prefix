import java.io.*;
import java.util.*;

public class Main{ // no issue of brackets and priorities in postfix ->a postfix expression is always a sorted expression
  

public static void main(String[] args) throws Exception {
    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    String exp = br.readLine();

    // code
    conversion(exp);
 }
 public static void conversion(String str){
     Stack<Integer> operand = new Stack<>();
     Stack<String> infix = new Stack<>();
     Stack<String> prefix = new Stack<>();
     
     for(int i=0 ; i< str.length() ; i++){
         char ch = str.charAt(i);
         
         if(ch>='0' && ch<='9' || ch>='a' && ch <= 'z'){
             operand.push(ch-'0');
             prefix.push(ch + "");
             infix.push(ch + "");
         }
         else if(ch=='+'|| ch=='-' || ch== '*' || ch== '/'){
             int y = operand.pop();
             int x = operand.pop();
             char opr = ch;
             int val = calculate(opr , x , y );
             operand.push(val);
             
             // infix evaluation
             String iny = infix.pop(); // iny = infix y
             String inx = infix.pop(); // inx = infix x
             infix.push("("+inx + opr + iny +')');
             
             // prefix evaluation
             String prey = prefix.pop(); // prey = prefix y
             String prex = prefix.pop(); // prex = prefix x
             prefix.push(""+opr + prex + prey);
         }
     }
     System.out.println(operand.peek());
     System.out.println(infix.peek());
     System.out.println(prefix.peek());
     
 }
 public static int calculate(char opr , int x , int y){
     if(opr =='+'){
         return x+y;
     }
     else if(opr == '-'){
         return x-y;
     }
     else if(opr== '*'){
         return x * y;
     }
     else if(opr== '/'){
         return x / y;
     }
     else{
         return -1;
     }
 }
}
